/* tslint:disable */
/* eslint-disable */
import globalAxios, { AxiosInstance } from 'axios';

{{>licenseInfo}}

export class Configuration {
  /**
   * parameter for apiKey security
   * @param name security name
   * @memberof Configuration
   */
  apiKey?: string | Promise<string> | ((name: string) => string) | ((name: string) => Promise<string>);
  /**
   * parameter for basic security
   *
   * @type {string}
   * @memberof Configuration
   */
  username?: string;
  /**
   * parameter for basic security
   *
   * @type {string}
   * @memberof Configuration
   */
  password?: string;
  /**
   * parameter for oauth2 security
   * @param name security name
   * @param scopes oauth2 scope
   * @memberof Configuration
   */
  accessToken?: string | ((name?: string, scopes?: string[]) => string);
  /**
   * override base path
   *
   * @type {string}
   * @memberof Configuration
   */
  basePath?: string;
  /**
   * base options for axios calls
   *
   * @type {any}
   * @memberof Configuration
   */
  baseOptions?: any;

  /*
   * Override the axiosInstance used for communication if desired.
   */
  axiosInstance: AxiosInstance;

  constructor(init?: Partial<Configuration>) {
    Object.assign(this, init);

    if (this.axiosInstance === undefined) {
      this.axiosInstance = globalAxios;
    }
  }
}
