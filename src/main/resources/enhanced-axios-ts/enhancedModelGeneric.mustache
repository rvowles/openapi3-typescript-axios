/**
* {{{description}}}
* @export
* @class {{classname}}
*/
export class {{classname}} {{#parent}}extends {{{parent}}} {{/parent}}{
{{#additionalPropertiesType}}
  [key: string]: {{{additionalPropertiesType}}}{{#hasVars}} | any{{/hasVars}};

{{/additionalPropertiesType}}
{{#vars}}
  /**
  * {{{description}}}
  * @type {{=<% %>=}}{<%&datatype%>}<%={{ }}=%>
  * @memberof {{classname}}
  {{#deprecated}}
    * @deprecated
  {{/deprecated}}
  */
  public {{name}}{{^required}}?{{/required}}: {{#isEnum}}{{{datatypeWithEnum}}}{{/isEnum}}{{^isEnum}}{{#vendorExtensions.x-ts-record-type}}{{{vendorExtensions.x-ts-record-type}}}{{/vendorExtensions.x-ts-record-type}}{{^vendorExtensions.x-ts-record-type}}{{{dataType}}}{{/vendorExtensions.x-ts-record-type}}{{#isNullable}} | null{{/isNullable}}{{/isEnum}};
{{/vars}}

  constructor(init?: Partial<{{classname}}>) {
{{#hasAllOf}}
    super({}); // next line will assign all props
{{/hasAllOf}}
    Object.assign(this, init);
  }
}{{#hasEnums}}

  {{#vars}}
    {{#isEnum}}
      /**
      * @export
      * @enum {string}
      */
      export enum {{enumName}} {
      {{#allowableValues}}
        {{#enumVars}}
          {{{name}}} = {{{value}}}{{^-last}},{{/-last}}
        {{/enumVars}}
      {{/allowableValues}}
      }
    {{/isEnum}}
  {{/vars}}
{{/hasEnums}}
